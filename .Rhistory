for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
# lst_dfs[[1]] = lst_dfs[[1]] %>%
#   select(AMOUNT) %>%
#   mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = gsub("([..])|[[:punct:]]", "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = as.numeric(format(AMOUNT))) %>%
#   filter(AMOUNT != is.na(AMOUNT)) %>%
#   summarise(sum_ = sum(AMOUNT))
# lst_dfs[[1]]$sum_
lst_dfs[[22]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
summarise(sum_ = sum(AMOUNT))
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(START.DATE,END.DATE,AMOUNT) %>%
filter(AMOUNT > 0) %>%
mutate(START.DATE = as.Date(START.DATE, "%m/%d/%Y")) %>%
mutate(END.DATE = as.Date(END.DATE,"%m/%d/%Y")) %>%
filter(END.DATE != is.na(END.DATE)) %>%
filter(START.DATE != is.na(START.DATE)) %>%
mutate(COVERAGE.PERIOD = as.numeric(difftime(END.DATE, START.DATE))) %>%
summarise(sd = sd(COVERAGE.PERIOD))
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
# lst_dfs[[1]] = lst_dfs[[1]] %>%
#   select(AMOUNT) %>%
#   mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = gsub("([..])|[[:punct:]]", "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = as.numeric(format(AMOUNT))) %>%
#   filter(AMOUNT != is.na(AMOUNT)) %>%
#   summarise(sum_ = sum(AMOUNT))
# lst_dfs[[1]]$sum_
lst_dfs[[22]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT = AMOUNT / 100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
summarise(sum_ = sum(AMOUNT))
# lst_dfs[[1]] = lst_dfs[[1]] %>%
#   select(AMOUNT) %>%
#   mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = gsub("([..])|[[:punct:]]", "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = as.numeric(format(AMOUNT))) %>%
#   filter(AMOUNT != is.na(AMOUNT)) %>%
#   summarise(sum_ = sum(AMOUNT))
# lst_dfs[[1]]$sum_
lst_dfs[[22]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
summarise(sum_ = sum(AMOUNT))
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
# lst_dfs[[1]] = lst_dfs[[1]] %>%
#   select(AMOUNT) %>%
#   mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = gsub("([..])|[[:punct:]]", "", lst_dfs[[1]]$AMOUNT)) %>%
#   mutate(AMOUNT = as.numeric(format(AMOUNT))) %>%
#   filter(AMOUNT != is.na(AMOUNT)) %>%
#   summarise(sum_ = sum(AMOUNT))
# lst_dfs[[1]]$sum_
lst_dfs[[22]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[22]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
summarise(sum_ = sum(AMOUNT))
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(START.DATE,END.DATE,AMOUNT) %>%
filter(AMOUNT > 0) %>%
mutate(START.DATE = as.Date(START.DATE, "%m/%d/%Y")) %>%
mutate(END.DATE = as.Date(END.DATE,"%m/%d/%Y")) %>%
filter(END.DATE != is.na(END.DATE)) %>%
filter(START.DATE != is.na(START.DATE)) %>%
mutate(COVERAGE.PERIOD = as.numeric(difftime(END.DATE, START.DATE))) %>%
summarise(sd = sd(COVERAGE.PERIOD))
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(START.DATE,END.DATE,AMOUNT) %>%
filter(AMOUNT > 0) %>%
mutate(START.DATE = as.Date(START.DATE, "%m/%d/%Y")) %>%
mutate(END.DATE = as.Date(END.DATE,"%m/%d/%Y")) %>%
filter(END.DATE != is.na(END.DATE)) %>%
filter(START.DATE != is.na(START.DATE)) %>%
mutate(COVERAGE.PERIOD = as.numeric(difftime(END.DATE, START.DATE))) %>%
filter(COVERAGE.PERIOD >0) %>%
summarise(sd = sd(COVERAGE.PERIOD))
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='"',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub(",", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = gsub("-", "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
for(i in 1:length(lst_dfs)){
lst_dfs[[i]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='[::punc::]',replacement = "", lst_dfs[[i]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT/100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
payment_sum = payment_sum + lst_dfs[[i]]$sum_
}
lst_dfs[[23]] %>%
select(AMOUNT) %>%
mutate(AMOUNT = gsub(pattern ='[::punc::]',replacement = "", lst_dfs[[23]]$AMOUNT)) %>%
mutate(AMOUNT = as.numeric(AMOUNT)) %>%
mutate(AMOUNT/100) %>%
filter(AMOUNT != is.na(AMOUNT)) %>%
select(sum_ = sum(AMOUNT))
shiny::runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChina
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChinaAlltime
temp
View(temp)
temp %>%
select(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"]))
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"]))
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"]))
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(MeanChinese,MeanOverseas,alternative = "double.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(MeanChinese,MeanOverseas,alternative = "twp.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(MeanChinese,MeanOverseas,alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(MeanChinese,MeanOverseas,alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(MeanChinese[1],MeanOverseas[1],alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(temp[,MeanChinese],temp[,MeanOverseas],alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
t.test(temp[MeanChinese,],temp[MeanOverseas,],alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
select(MeanChinese) %>%
sample_n(1) -> ChineseMean
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
select(MeanOverseas) %>%
sample_n(1) -> OverseasMean
ChineseMean
OverseasMean
t.test(ChineseMean,OverseasMean,alternative = "two.sided")
OverseasMean
ChineseMean
t.test(82.5,291,alternative = "two.sided")
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) ->ChineseMean
temp %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) -> OverseasMean
OverseasMean = as.vector(OverseasMean)
OverseasMean
select(MeanOverseas-> OverseasMean
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
select(MeanChinese) ->ChineseMean
UsChinaAlltime  %>%
select(Year,Total_Worldwide_Gross,Domestic,OverseasTotalRegion,Overseasfactor,Overseas) %>%
group_by(Year) %>%
mutate(TWGperYear = sum(Total_Worldwide_Gross)) %>%
group_by(Year, OverseasTotalRegion, TWGperYear)-> temp
temp %>%
mutate(MeanChinese = mean(Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"])) %>%
select(MeanChinese) ->ChineseMean
temp %>%
OverseasMean = as.vector(OverseasMean)
OverseasMean
OverseasMean
temp %>%
mutate(MeanOverseas = mean(Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"])) %>%
select(MeanOverseas)
UsChinaAlltime  %>%
select(Year,Total_Worldwide_Gross,Domestic,OverseasTotalRegion,Overseasfactor,Overseas) %>%
group_by(Year) %>%
mutate(TWGperYear = sum(Total_Worldwide_Gross)) %>%
group_by(Year, OverseasTotalRegion, TWGperYear)-> temp
temp = tbl_df(temp)
temp %>%
mutate(MeanChinese = Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"]) %>%
select(MeanChinese) ->ChineseMean
temp %>%
mutate(MeanOverseas = Overseasfactor[OverseasTotalRegion=="all_other_overseas_gross"]) %>%
select(MeanOverseas)-> OverseasMean
ChineseMean
OverseasMean = as.vector(OverseasMean[MeanOverseas])
OverseasMean
OverseasMean = as.vector(OverseasMean$MeanOverseas)
OverseasMean
runApp('IRAVILLARShinyApp')
temp %>%
mutate(MeanChinese = Overseasfactor[OverseasTotalRegion == "Total_Chinese_Gross"]) %>%
select(MeanChinese) ->ChineseMean
runApp('IRAVILLARShinyApp')
temp %>%
filter(OverseasTotalRegion == "Total_Chinese_Gross")
temp %>%
filter(OverseasTotalRegion == "Total_Chinese_Gross") %>%
select(Overseasfactor) ->ChineseMean
ChineseMean
OverseasMean = as.vector(OverseasMean$Overseasfactor)
ChineseMean = as.vector(ChineseMean$Overseasfactor)
temp %>%
filter(OverseasTotalRegion=="all_other_overseas_gross") %>%
select(Overseasfactor)-> OverseasMean
OverseasMean = as.vector(OverseasMean$Overseasfactor)
OverseasMean
ChineseMean
t.test(ChineseMean,OverseasMean,alternative = "two.sided")
UsChina
UsChina %>%
unique(Studio)
View(UsChina)
UsChina
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
shiny::runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChinaCompare = UsChinaAlltime %>%
group_by(Year)
UsChinaCompare = UsChinaAlltime %>%
group_by(Year)
UsChinaCompare
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChinaCompare
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
View(UsChinaCompare)
View(UsChinaCompare)
UsChinaCompare %>%
group_by(Year) %>%
filter(Year %in% c(2006:2019))) %>%
mutate(Domestic_Total = sum(Domestic)) %>%
mutate(Chinese_Total = sum(Total_Chinese_Gross)) %>%
filter(Domestic_Total != is.na(Domestic_Total)) %>%
arrange(Year) %>%
select(Year,Domestic_Total,Chinese_Total)
UsChinaCompare %>%
group_by(Year) %>%
filter(Year %in% c(2006:2019)) %>%
mutate(Domestic_Total = sum(Domestic)) %>%
mutate(Chinese_Total = sum(Total_Chinese_Gross)) %>%
filter(Domestic_Total != is.na(Domestic_Total)) %>%
arrange(Year) %>%
select(Year,Domestic_Total,Chinese_Total)
UsChinaCompare
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChinaCompare
View(UsChinaCompare)
View(UsChinaCompare)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross) %>%
select(Title,UsChinaCompareRegion,UsChinafactor)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross) %>%
select(-Yearm Title,UsChinaCompareRegion,UsChinafactor)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross) %>%
select(-Year,Title,UsChinaCompareRegion,UsChinafactor)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross) %>%
select(Title,UsChinaCompareRegion,UsChinafactor)
UsChinaCompare %>%
gather(key="UsChinaCompareRegion",value="UsChinafactor",Domestic,Total_Chinese_Gross) %>%
select(Title,UsChinaCompareRegion,UsChinafactor)
runApp('IRAVILLARShinyApp')
UsChinaCompare
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
UsChinaCompare %>%
group_by(Year) %>%
filter(Year %in% c(2006:2019)) %>%
mutate(Domestic_Total = sum(Domestic)) %>%
mutate(Chinese_Total = sum(Total_Chinese_Gross)) %>%
filter(Domestic_Total != is.na(Domestic_Total)) %>%
arrange(Year) %>%
select(Year,Domestic_Total,Chinese_Total)
runApp('IRAVILLARShinyApp')
View(UsChinaCompare)
View(UsChinaCompare)
runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
Domestic_Total
UsChinaCompare$Domestic_Total
View(UsChinaCompare)
View(UsChinaCompare)
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
install.packages("plotly.express")
install.packages("plotly.express")
install_github('andreacirilloac/updateR')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = ' ')
install.packages(as.vector(needed_packages))
install.packages("plotly.express")
updateR(admin_password = 'julio1')
library(updateR)
updateR(admin_password = 'julio1')
julio1
ns = read.csv("NumberofScreens.csv",stringsAsFactors = FALSE)
library(updateR)
updateR(admin_password = 'julio1')
updateR(admin_password = 'julio1')
install.packages(as.vector(needed_packages))
install.packages("plotly.express")
library(plotly)
install.packages("plotly")
install.packages(c("boot", "foreign", "mgcv", "nlme"))
install.packages("plotly")
library(plotly)
library(ggplot2)
install.packages("data.table", dependencies=TRUE)
library(plotly)
shiny::runApp('IRAVILLARShinyApp')
install.packages("rsconnect")
install.packages(c("DT", "googleVis", "lubridate", "rsconnect", "shinydashboard"))
install.packages(c("dplyr", "DT", "ggplot2", "googleVis", "lubridate", "plotly", "rsconnect", "scales", "shiny", "shinydashboard", "tidyr"))
shiny::runApp('IRAVILLARShinyApp')
library(plotly)
UsChinaCompare
runApp('IRAVILLARShinyApp')
UsChinaCompare
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
View(UsChinaCompare)
View(UsChinaCompare)
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp()
runApp('IRAVILLARShinyApp')
runApp()
setwd("~/Downloads/IRAVILLARShinyApp")
runApp()
UsChinaCompare
runApp()
UsChinaCompare
runApp()
runApp()
runApp()
runApp()
runApp()
UsChinaCompare
runApp()
runApp()
runApp()
UsChinaCompare
runApp()
UsChinaCompare
runApp()
UsChinaCompare2 = UsChinaCompare %>%
gather(key = "Region", value = "Returns", Total_Chinese_Gross, Domestic)
runApp()
runApp()
UsChinaCompare2
UsChinaCompare2 = tbl_df(UsChinaCompare2)
UsChinaCompare2
runApp()
runApp()
runApp()
runApp()
UsChinaCompare2
View(UsChinaCompare2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
